spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 976760217786-ll08n2e9dkik24tbu1b7sfidq3slurua.apps.googleusercontent.com
            client-secret: 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
            scope: profile, email

          naver:
            client-id: 1ay05z9t10KNc25QgOWA
            client-secret: S191yWDn_D
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope: name, email, profile_image
            client-name: Naver

          kakao:
            client-id: 23fc68853efef456959056da4ed06bd1
            client-secret: JB8Fl5dAEfXCX57hpXsLPxJZRLeCmtVl
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            scope: profile_nickname, profile_image
            client-name: Kakao

        provider:
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token_uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

        #Google의 경우 스프링에서 내부에서 Provider 정보를 제공하는 것들 중에 하나임 따라서 개별 설정이 필요없음
        #registration => OAuth 로그인 시 설정한 앱의 정보를 사용하여
        #                 AccessToken을 Authorization Server에게 발급 받을 때 사용
        #provider => AccessToken을 Authorization Server에게 발급 받은 후
        #             해당 AccessToken으로 Resource Server의 API를 사용할 때 Provider 부분의 정보를 사용하여 API 호출